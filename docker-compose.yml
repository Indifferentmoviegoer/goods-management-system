version: '3.4'

services:
  nginx:
    build: ./docker/nginx
    user: ${DOCKER_UID}
    restart: always
    ports:
      - "${NGINX_PORT}:8080"
    depends_on:
      - php
    volumes:
      - ./public/:/var/www/symfony/public:cached
      - ./docker/logs/nginx:/var/log/nginx:cached

  php:
    user: ${DOCKER_UID}
    restart: always
    build:
      context: ./docker
      dockerfile: php-fpm/Dockerfile
      target: php_fpm_production
    volumes:
      - ./:/var/www/symfony:cached

  queue:
    user: ${DOCKER_UID}
    restart: always
    build:
      context: ./docker
      dockerfile: php-fpm/Dockerfile
      target: php_queue
    volumes:
      - ./:/var/www/symfony:cached

  db:
    image: postgres:${POSTGRES_VERSION:-14}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    volumes:
      - postgres-data:/var/lib/postgresql/data:delegated

  rabbitmq:
    restart: unless-stopped
    image: rabbitmq:3.8-management
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    ports:
      - ${RABBITMQ_PORT}:${RABBITMQ_PORT}

volumes:
  postgres-data: { }
